name: Benchmark using all datasets
on:
  workflow_dispatch:
    releaseTag:
      required: false
      description: "Release tag for the benchmark results"
      # default: "latest"
      default: "CI"
      type: string
jobs:
  bench_all:
    name: Benchmark using all datasets
    strategy:
      fail-fast: false
      matrix:
        # benchScriptSet: ["stub", "stub-fast", "normal", "large", "coauthorship"]
        benchScriptSet: ["stub", "stub-fast"]
    uses: tddschn/easygraph-bench/.github/workflows/bench.yaml@master
    with:
      benchScriptSet: "${{ matrix.benchScriptSet }}"
      # runs-on
      # python-version
      # timeout
      # cpp-binding-framework
      # releaseTag
      uploadResultsAsArtifact: true

  merge_and_release:
    name: Merge bench results and create release
    runs-on: ubuntu-latest
    needs: bench_all
    steps:
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Checkout easygraph-bench
        uses: actions/checkout@v3
        with:
          repository: tddschn/easygraph-bench

      - name: Install dependencies for easygraph-bench
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Download result artifacts
        uses: actions/download-artifact@v3
        with:
          path: bench-results

      - name: Check downloaded artifacts
        working-directory: bench-results
        run: |
          pwd
          ls -lh *.csv
          tail -n +1 *.csv

      - name: Merge results
        run: |
          python ./merge_bench_csv.py -c bench-results > all.csv

      - name: Create release
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ inputs.releaseTag }}
        run: |
          DATE_STR="$(date +"%Y-%m-%dT%H:%M:%S:%z")"

          CSV_ZIP_FILENAME="bench-results-csv-${DATE_STR}.zip"

          mv all.csv bench-results

          zip -r "${CSV_ZIP_FILENAME}" bench-results

          set +e
          # don't exit on error
          gh release create "${TAG}" --notes "Release from GitHub Actions"
          set -e

          gh release upload "${TAG}" "${CSV_ZIP_FILENAME}"
