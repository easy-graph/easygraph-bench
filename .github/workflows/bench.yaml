# Author : Xinyuan Chen <45612704+tddschn@users.noreply.github.com>
# Date   : 2022-08-21
# Purpose: benchmark easygraph python & C++ bindings and compare with networkx's baseline performance
# License: MIT
# Link   : https://github.com/tddschn/easygraph-bench/blob/master/.github/workflows/bench.yaml

name: benchmark
on: 
  workflow_dispatch:
    inputs:
      egBindingFramework:
        required: false
        description: "The framework used to build easygraph's C++ binding"
        default: "pybind11"
        type: choice
        options:
          - "pybind11"
          - "boost-python"
      benchScriptSet:
        required: false
        description: "The set of scripts to run to benchmark"
        default: "normal"
        type: choice
        options:
          - "normal"
          - "large"
jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: checkout Easy-Graph master branch
        if: inputs.egBindingFramework == 'boost-python'
        uses: actions/checkout@v3
        with:
          repository: easy-graph/Easy-Graph
          path: Easy-Graph
          ref: 'master'

      - name: checkout Easy-Graph pybind11 branch
        if: inputs.egBindingFramework == 'pybind11'
        uses: actions/checkout@v3
        with:
          repository: easy-graph/Easy-Graph
          path: Easy-Graph
          ref: 'pybind11'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: install easygraph common dependencies
        run: |          
          pip install pytest
          pip install Pillow
          pip install kiwisolver
          pip install gensim
          pip install lxml

      - name: build and install easygraph (pybind11)
        if: inputs.egBindingFramework == 'pybind11'
        env:
          python_version: '3.9'
          boost_version: "1.79.0"
        working-directory: Easy-Graph
        run: |          
          git checkout pybind11

          pip install pybind11
          python setup.py build_ext
          python setup.py install

      - name: build and install easygraph (boost-python)
        if: inputs.egBindingFramework == 'boost-python'
        env:
          python_version: '3.9'
          boost_version: "1.79.0"
        working-directory: Easy-Graph
        run: |          
          python_version_abbr=${python_version//./}
          boost_version_alias=boost_${boost_version//./_}
          sudo apt-get update
          sudo apt-get install gcc -y
          sudo apt-get install g++ -y
          wget https://boostorg.jfrog.io/artifactory/main/release/${boost_version}/source/${boost_version_alias}.tar.gz
          tar -xf ${boost_version_alias}.tar.gz
          cd ${boost_version_alias}
          ./bootstrap.sh --with-python=python
          sudo ./b2 cxxflags="-fPIC" install --with-python
          
          sudo ln -s /usr/local/lib/libboost_python${python_version_abbr}.a /usr/local/lib/libboost_python.a

          cd -

          python setup.py build_ext -l boost_python -L "/usr/local/lib" -I "/usr/local/include"
          python setup.py install
        


      # cSpell:disable
      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
      #   with:
      #     ## limits ssh access and adds the ssh public key for the user which triggered the workflow
      #     limit-access-to-actor: true
      #     ## limits ssh access and adds the ssh public keys of the listed GitHub users
      #     limit-access-to-users: tddschn

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      # cSpell:enable

      - uses: actions/checkout@v3
        with:
          path: easygraph-bench

      - name: Install dependencies
        working-directory: easygraph-bench
        run: |
          pip install -r requirements.txt

      - name: benchmark (normal)
        working-directory: easygraph-bench
        run: |
          python3 ./bench.py

      - name: benchmark (large)
        working-directory: easygraph-bench
        run: |
          python3 ./bench_large.py

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: |
            ${{ github.workspace }}/easygraph-bench/images
            ${{ github.workspace }}/easygraph-bench/*.csv

      - name: Create release
        working-directory: easygraph-bench
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make zip-csv
          make zip-figs
          gh release create v0.2.3 bench-results-csv.zip bench-result-figures.zip